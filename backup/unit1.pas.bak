unit Unit1;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, StdCtrls,
  RichMemo, ListFilterEdit, RTTICtrls, UGlobales, UMyUtils, UfdeFile, LCLIntf,
  Buttons, ExtCtrls, Menus, Grids, LCLType, ComCtrls, IniPropStorage, EditBtn,
  FileCtrl, UMyApps, LazFileUtils, SynEdit, SynHighlighterXML, UMyGridString,
  UAyuda, UniqueInstance, ShellApi,
{$IFDEF UNIX}{$IFDEF UseCThreads}
cthreads,
{$ENDIF}{$ENDIF}
// FPC 3.0 fileinfo reads exe resources as long as you register the appropriate units
fileinfo
, winpeimagereader {need this for reading exe info}
, elfreader {needed for reading ELF executables}
, machoreader {needed for reading MACH-O executables}
, Types;

type

  { TForm1 }

  TForm1 = class(TForm)
    BitBtn1: TBitBtn;
    BitBtn10: TBitBtn;
    BitBtn11: TBitBtn;
    BitBtn12: TBitBtn;
    BitBtn15: TBitBtn;
    BitBtn16: TBitBtn;
    BitBtn19: TBitBtn;
    BitBtn21: TBitBtn;
    BitBtn23: TBitBtn;
    BitBtn9: TBitBtn;
    BtnApp1: TBitBtn;
    BitBtn13: TBitBtn;
    BitBtn14: TBitBtn;
    BitBtn2: TBitBtn;
    BitBtn3: TBitBtn;
    BitBtn4: TBitBtn;
    BitBtn5: TBitBtn;
    BitBtn6: TBitBtn;
    BitBtn7: TBitBtn;
    BitBtn8: TBitBtn;
    BtnApp10: TBitBtn;
    BtnApp11: TBitBtn;
    BtnApp12: TBitBtn;
    BtnApp13: TBitBtn;
    BtnApp14: TBitBtn;
    BtnApp15: TBitBtn;
    BtnApp16: TBitBtn;
    BtnApp17: TBitBtn;
    BtnApp18: TBitBtn;
    BtnApp19: TBitBtn;
    BtnApp2: TBitBtn;
    BtnApp20: TBitBtn;
    BtnApp3: TBitBtn;
    BtnApp4: TBitBtn;
    BtnApp5: TBitBtn;
    BtnApp6: TBitBtn;
    BtnApp7: TBitBtn;
    BtnApp8: TBitBtn;
    BtnApp9: TBitBtn;
    MenuItem14: TMenuItem;
    ModWebXml: TCheckBox;
    chkWebxml: TCheckBox;
    CheckBox2: TCheckBox;
    CheckBox3: TCheckBox;
    CheckBox4: TCheckBox;
    CheckBox5: TCheckBox;
    CheckBox6: TCheckBox;
    CheckBox7: TCheckBox;
    CheckBox8: TCheckBox;
    CheckBox9: TCheckBox;
    Edit5: TEdit;
    GroupBox6: TGroupBox;
    GroupBox7: TGroupBox;
    GroupBox8: TGroupBox;
    ImgApp10: TImage;
    ImgApp11: TImage;
    ImgApp12: TImage;
    ImgApp13: TImage;
    ImgApp14: TImage;
    ImgApp15: TImage;
    ImgApp16: TImage;
    ImgApp17: TImage;
    ImgApp18: TImage;
    ImgApp19: TImage;
    ImgApp20: TImage;
    ImgApp6: TImage;
    ImgApp7: TImage;
    ImgApp8: TImage;
    ImgApp9: TImage;
    IniPropStorage1: TIniPropStorage;
    Label10: TLabel;
    Label8: TLabel;
    ItemPDFReportini: TMenuItem;
    ItemClientcfg: TMenuItem;
    ItemCopiarRuta: TMenuItem;
    Label9: TLabel;
    MenuItem10: TMenuItem;
    MenuItem11: TMenuItem;
    MenuItem12: TMenuItem;
    MenuItem13: TMenuItem;
    MenuItem2: TMenuItem;
    MenuItem23: TMenuItem;
    MenuTrayClose: TMenuItem;
    ItemWebXml: TMenuItem;
    MenuItem3: TMenuItem;
    MenuItem4: TMenuItem;
    MenuItem5: TMenuItem;
    MenuItem6: TMenuItem;
    MenuItem7: TMenuItem;
    MenuItem8: TMenuItem;
    MenuItem9: TMenuItem;
    MinAppRun: TCheckBox;
    GroupBox2: TGroupBox;
    GroupBox3: TGroupBox;
    GroupBox4: TGroupBox;
    ImgApp1: TImage;
    ImgApp2: TImage;
    ImgApp3: TImage;
    ImgApp4: TImage;
    ImgApp5: TImage;
    MenuItem20: TMenuItem;
    MenuItem21: TMenuItem;
    ItemAjustar: TMenuItem;
    MinScriptFDE: TCheckBox;
    MinGenWar: TCheckBox;
    GroupBox1: TGroupBox;
    ItemSelAll: TMenuItem;
    ItemSelNone: TMenuItem;
    ItemSelInvertir: TMenuItem;
    ItemSpace: TMenuItem;
    ItemVerWin: TMenuItem;
    OpenDialog2: TOpenDialog;
    EditWebxml: TPage;
    PageControl1: TPageControl;
    Panel2: TPanel;
    Panel4: TPanel;
    Principal: TPage;
    Panel1: TPanel;
    PopupMenu2: TPopupMenu;
    PopupMenu3: TPopupMenu;
    RichMemo1: TRichMemo;
    Splitter1: TSplitter;
    StatusBar1: TStatusBar;
    StringGrid1: TStringGrid;
    StringGrid3: TStringGrid;
    TabSheet1: TTabSheet;
    TabSheet2: TTabSheet;
    TrayPopMenu: TPopupMenu;
    ToTray: TCheckBox;
    LblOriginalFilename: TLabel;
    Label11: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    LblProductName: TLabel;
    LblProductVersion: TLabel;
    Modificado: TCheckBox;
    Edit3: TEdit;
    Edit4: TEdit;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    ListBox1: TListBox;
    MainMenu1: TMainMenu;
    Button1: TButton;
    Button2: TButton;
    Edit1: TEdit;
    Edit2: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    ListFilterEdit1: TListFilterEdit;
    ItemCheck_Uncheck: TMenuItem;
    Notebook1: TNotebook;
    OpenDialog1: TOpenDialog;
    RunFDE: TPage;
    EditFDE: TPage;
    About: TPage;
    Opciones: TPage;
    Panel3: TPanel;
    PopupMenu1: TPopupMenu;
    RichMemo2: TRichMemo;
    SaveDialog1: TSaveDialog;
    SelectDirectoryDialog1: TSelectDirectoryDialog;
    Shape3: TShape;
    StringGrid2: TStringGrid;
    Timer1: TTimer;
    TrayIcon1: TTrayIcon;
    UniqueInstance1: TUniqueInstance;

    procedure BitBtn10Click(Sender: TObject);
    procedure BitBtn11Click(Sender: TObject);
    procedure BitBtn12Click(Sender: TObject);
    procedure BitBtn13Click(Sender: TObject);
    procedure BitBtn14Click(Sender: TObject);
    procedure BitBtn15Click(Sender: TObject);
    procedure BitBtn16Click(Sender: TObject);
    procedure BitBtn19Click(Sender: TObject);
    procedure BitBtn1Click(Sender: TObject);
    procedure BitBtn21Click(Sender: TObject);
    procedure BitBtn23Click(Sender: TObject);
    procedure BitBtn2Click(Sender: TObject);
    procedure BitBtn3Click(Sender: TObject);
    procedure BitBtn4Click(Sender: TObject);
    procedure BitBtn5Click(Sender: TObject);
    procedure BitBtn6Click(Sender: TObject);
    procedure BitBtn7Click(Sender: TObject);
    procedure BitBtn8Click(Sender: TObject);
    procedure BitBtn9Click(Sender: TObject);
    procedure BtnApp10Click(Sender: TObject);
    procedure BtnApp10MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure BtnApp11Click(Sender: TObject);
    procedure BtnApp11MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure BtnApp12Click(Sender: TObject);
    procedure BtnApp12MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure BtnApp13Click(Sender: TObject);
    procedure BtnApp13MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure BtnApp14Click(Sender: TObject);
    procedure BtnApp14MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure BtnApp15Click(Sender: TObject);
    procedure BtnApp15MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure BtnApp16Click(Sender: TObject);
    procedure BtnApp16MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure BtnApp17Click(Sender: TObject);
    procedure BtnApp17MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure BtnApp18Click(Sender: TObject);
    procedure BtnApp18MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure BtnApp19Click(Sender: TObject);
    procedure BtnApp19MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure BtnApp1Click(Sender: TObject);
    procedure BtnApp1MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure BtnApp20Click(Sender: TObject);
    procedure BtnApp20MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure BtnApp2Click(Sender: TObject);
    procedure BtnApp2MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure BtnApp3Click(Sender: TObject);
    procedure BtnApp3MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure BtnApp4Click(Sender: TObject);
    procedure BtnApp4MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure BtnApp5Click(Sender: TObject);
    procedure BtnApp5MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure BtnApp6Click(Sender: TObject);
    procedure BtnApp6MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure BtnApp7Click(Sender: TObject);
    procedure BtnApp7MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure BtnApp8Click(Sender: TObject);
    procedure BtnApp8MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure BtnApp9Click(Sender: TObject);
    procedure BtnApp9MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Button2Click(Sender: TObject);
    procedure CheckBox2Change(Sender: TObject);
    procedure CheckBox3Change(Sender: TObject);
    procedure CheckBox4Change(Sender: TObject);
    procedure CheckBox5Change(Sender: TObject);
    procedure CheckBox6Change(Sender: TObject);
    procedure CheckBox7Change(Sender: TObject);
    procedure CheckBox8Change(Sender: TObject);
    procedure CheckBox9Change(Sender: TObject);
    procedure chkWebxmlChange(Sender: TObject);
    procedure Edit5Change(Sender: TObject);
    procedure EditWebxmlBeforeShow(ASender: TObject; ANewPage: TPage;
      ANewIndex: Integer);
    procedure EditWebxmlExit(Sender: TObject);
    procedure ImgApp10MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure ImgApp1MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure ImgApp2MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure ImgApp3MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure ImgApp4MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure ImgApp5MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure ImgApp6MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure ImgApp7MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure ImgApp8MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure ImgApp9MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure ItemClientcfgClick(Sender: TObject);
    procedure ItemPDFReportiniClick(Sender: TObject);
    procedure ItemCopiarRutaClick(Sender: TObject);
    procedure Label10Click(Sender: TObject);
    procedure MenuItem10Click(Sender: TObject);
    procedure MenuItem11Click(Sender: TObject);
    procedure MenuItem13Click(Sender: TObject);
    procedure MenuItem14Click(Sender: TObject);
    procedure MenuItem1Click(Sender: TObject);
    procedure MenuItem20Click(Sender: TObject);
    procedure MenuItem21Click(Sender: TObject);
    procedure ItemAjustarClick(Sender: TObject);
    procedure MenuItem23Click(Sender: TObject);
    procedure MenuTrayCloseClick(Sender: TObject);
    procedure ItemWebXmlClick(Sender: TObject);
    procedure MenuItem2Click(Sender: TObject);
    procedure MenuItem3Click(Sender: TObject);
    procedure MenuItem4Click(Sender: TObject);
    procedure MenuItem5Click(Sender: TObject);
    procedure MenuItem6Click(Sender: TObject);
    procedure MenuItem7Click(Sender: TObject);
    procedure MenuItem8Click(Sender: TObject);
    procedure MinAppRunChange(Sender: TObject);
    procedure MinGenWarChange(Sender: TObject);
    procedure MinScriptFDEChange(Sender: TObject);
    procedure FormWindowStateChange(Sender: TObject);
    procedure ItemCheck_UncheckClick(Sender: TObject);
    procedure ItemVerWinClick(Sender: TObject);
    procedure ModWebXmlChange(Sender: TObject);
    procedure OpcionesBeforeShow(ASender: TObject; ANewPage: TPage;
      ANewIndex: Integer);
    procedure PrincipalBeforeShow(ASender: TObject; ANewPage: TPage;
      ANewIndex: Integer);
    procedure RichMemo1Change(Sender: TObject);
    procedure StringGrid1MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure StringGrid2MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure StringGrid3SelectEditor(Sender: TObject; aCol, aRow: Integer;
      var Editor: TWinControl);
    procedure StringGrid3ValidateEntry(sender: TObject; aCol, aRow: Integer;
      const OldValue: string; var NewValue: String);
    procedure ToTrayChange(Sender: TObject);
    procedure Edit1Change(Sender: TObject);
    procedure Edit2Change(Sender: TObject);
    procedure Edit4Change(Sender: TObject);
    procedure Label11Click(Sender: TObject);
    procedure Label1Click(Sender: TObject);
    procedure Label6Click(Sender: TObject);
    procedure ListBox1Click(Sender: TObject);
    procedure ListFilterEdit1Change(Sender: TObject);
    procedure menuBtnClick(Sender: TObject);
    procedure ItemSelAllClick(Sender: TObject);
    procedure ItemSelNoneClick(Sender: TObject);
    procedure ItemSelInvertirClick(Sender: TObject);
    procedure MenuItem16Click(Sender: TObject);
    procedure MenuItem17Click(Sender: TObject);
    procedure MenuItem9Click(Sender: TObject);
    procedure ModificadoChange(Sender: TObject);
    procedure RunFDEBeforeShow(ASender: TObject; ANewPage: TPage;
      ANewIndex: Integer);
    procedure EditFDEBeforeShow(ASender: TObject; ANewPage: TPage;
      ANewIndex: Integer);
    procedure AboutBeforeShow(ASender: TObject; ANewPage: TPage;
      ANewIndex: Integer);
    procedure AboutExit(Sender: TObject);
    procedure SeleccionarClick(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Button5Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure StringGrid1DblClick(Sender: TObject);
    procedure StringGrid2ButtonClick(Sender: TObject; aCol, aRow: Integer);
    procedure StringGrid2EditingDone(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure TrayIcon1Click(Sender: TObject);
    procedure UniqueInstance1OtherInstance(Sender: TObject;
      ParamCount: Integer; const Parameters: array of String);
  private
    procedure Iniciar();
    procedure Procesar();
    procedure Refrescar();
    Procedure MinimizeToTray();
    Procedure RestoreFromTray();
    procedure RefreshAPPS();
    { private declarations }
  public
    { public declarations }
  end;

var
  Utils:TMyUtils;
  Form1: TForm1;
  varGlobales : TGlobales;
  fdedir:String;
  fdefilepath:String;
  POPAPP:String;
  MyApp:TMyApps;
implementation

{$R *.lfm}

{ TForm1 }
procedure TForm1.FormCreate(Sender: TObject);
var
  FileVerInfo: TFileVersionInfo;
begin
  FileVerInfo:=TFileVersionInfo.Create(nil);
  TrayIcon1.Show;
  try
    FileVerInfo.ReadFileInfo;
    LblProductName.Caption:=FileVerInfo.VersionStrings.Values['ProductName'];
    LblProductVersion.Caption:='Ver.'+FileVerInfo.VersionStrings.Values['ProductVersion'];
    LblOriginalFilename.Caption:=FileVerInfo.VersionStrings.Values['OriginalFilename'];
   // showmessage('Company: '+FileVerInfo.VersionStrings.Values['CompanyName']);
   // showmessage('File description: '+FileVerInfo.VersionStrings.Values['FileDescription']);
   // showmessage('Internal name: '+FileVerInfo.VersionStrings.Values['InternalName']);
   // showmessage('Legal copyright: '+FileVerInfo.VersionStrings.Values['LegalCopyright']);
   // showmessage('Product version: '+FileVerInfo.VersionStrings.Values['FileVersion']);
  finally
    FileVerInfo.Free;
  end;
  //Opciones de Menu(Editor )
  RichMemo1.Clear;

  Utils:=TMyUtils.Create;
  MyApp:=TMyApps.Create;
  varGlobales:=TGlobales.Create;
  fdedir:=varGlobales.getFdeDir();
  fdefilepath:=varGlobales.getFdeFilepath();

  Edit1.Text:=varGlobales.getWebappsDir();
  SelectDirectoryDialog1.InitialDir:=Edit1.Text;

  OpenDialog1.InitialDir := fdedir;
  Edit2.Text:=fdefilepath;
  //Pagina
  CheckBox2.Checked:=varGlobales.getMostrarOK();
  CheckBox3.Checked:=varGlobales.getMostrarERR();
  CheckBox4.Checked:=varGlobales.getMostrarMSJ();
  CheckBox7.Checked:=varGlobales.getConfirmDel();
  CheckBox9.Checked:=varGlobales.getClrMemo();
  If (varGlobales.getOpcSalir()) then
     Notebook1.PageIndex:=varGlobales.getPageIndex()
  else Utils.goNotebookPage(RunFDE,Notebook1);
  //Opciones
  ToTray.Checked:=varGlobales.getTrayMinimize();
  MinGenWar.Checked:=varGlobales.getTrayGenWar();
  MinScriptFDE.Checked:=varGlobales.getTrayScriptFDE();
  CheckBox5.Checked:=varGlobales.getBeep();
  MinAppRun.Checked:=varGlobales.getTrayRunAPP();
  CheckBox6.Checked:=varGlobales.getOrderByUso();
  CheckBox8.Checked:=varGlobales.getOpcSalir();
  If Trim(varGlobales.getJavaHome()).IsEmpty Then
     begin
     Edit5.Text:=Utils.retJavaHome();
     varGlobales.setJavaHome(Edit5.Text)
     end else Edit5.Text:=varGlobales.getJavaHome();
  //WEB.XML
  stringgrid3.SaveOptions := [soDesign,soPosition,soAttributes,soContent];
  if FileExists('webxml.plt') then  StringGrid3.LoadFromFile('webxml.plt');
  StringGrid3.Columns[0].Visible:=False;
  If Trim(StringGrid3.Rows[1][3]).IsEmpty then StringGrid3.Rows[1][3]:='Etiqueta/Valor NO existen';
  StringGrid3.Options:=[goFixedVertLine,goFixedHorzLine,goVertLine,goHorzLine,goRowSizing,goColSizing,goEditing,goRowSelect,goAlwaysShowEditor,goDblClickAutoSize,goSmoothScroll,goSelectionActive,goFixedColSizing];
  PageControl1.ActivePage:=TabSheet1;
  chkWebxml.Checked:=varGlobales.getcompWebXml();

  TrayIcon1.BalloonTitle:=LblProductName.Caption;
  RefreshAPPS();
end;
procedure TForm1.Button1Click(Sender: TObject);
begin
    If OpenDialog1.Execute Then
    begin
      Edit2.Text:=OpenDialog1.FileName;
    end;
end;

procedure TForm1.SeleccionarClick(Sender: TObject);
begin
    If  SelectDirectoryDialog1.Execute Then
    begin
      Edit1.Text:=SelectDirectoryDialog1.FileName;
    end;
end;

procedure TForm1.BitBtn1Click(Sender: TObject);
begin
   If (varGlobales.getClrMemo()) Then RichMemo1.Clear;
   Iniciar();
   If (Form1.WindowState = wsMinimized)Or (Form1.ShowInTaskBar = stNever)  Then TrayIcon1.ShowBalloonHint;
end;

procedure TForm1.BitBtn21Click(Sender: TObject);
var UG:TMyGridString;
begin
  Modificado.Checked:=True;
  UG:=TMyGridString.Create;
  UG.delToGrid(StringGrid3,StringGrid3.Row);
  UG.Free;
  ModWebXml.Checked:=True;
 // stringgrid3.SaveOptions := [soDesign,soPosition,soAttributes,soContent];
 // StringGrid3.SaveToFile('webxml.plt');
end;

procedure TForm1.BitBtn23Click(Sender: TObject);
var Mensaje:String;
  utilGrid:TMyGridString;
begin
  utilGrid:=TMyGridString.Create;
  utilGrid.addNewRow2Grid(['','','','Etiqueta/Valor NO existen',''],StringGrid3);
  utilGrid.Free;
  ModWebXml.Checked:=True;
  stringgrid3.SaveOptions := [soDesign,soPosition,soAttributes,soContent];
  StringGrid3.SaveToFile('webxml.plt');
end;

procedure TForm1.BitBtn10Click(Sender: TObject);
begin
   Timer1.Enabled:=Not Timer1.Enabled;
   If Timer1.Enabled Then Beep;
     Label7.Caption:='   o o o o o o o o o o    '+LblProductName.Caption+' '+LblProductVersion.Caption+' '+LblOriginalFilename.Caption;
end;

procedure TForm1.BitBtn11Click(Sender: TObject);
begin
  RichMemo1.Clear;
  TrayIcon1.Hint:='';
  StatusBar1.SimpleText:='';
end;

procedure TForm1.BitBtn12Click(Sender: TObject);
var MG:TMyGridString;
begin
  MG:=TMyGridString.Create;
  MG.upInGrid(StringGrid3,ModWebXml);
  MG.Free;
end;

procedure TForm1.BitBtn13Click(Sender: TObject);
var
  Resp: Integer;
begin
  Resp:=0;
  If Modificado.Checked Then
  begin
    Resp := Application.MessageBox('Esta Acción DESCARTARÁ los Cambios'+sLineBreak+'¿Desea Continuar?', '', (MB_ICONQUESTION + MB_OKCANCEL));
    If (Resp<>IDOK) Then Exit;
  end;
  If OpenDialog1.Execute Then
  begin
    Edit4.Text:='';
    Edit4.Text:=OpenDialog1.FileName;
  end;
end;

procedure TForm1.BitBtn14Click(Sender: TObject);
var Resp:Integer;
  ffile:TFdeFile;
begin
  if SaveDialog1.Execute then
  begin
    Resp:=IDOK;
    If FileExists(Utils.clearFilePath(SaveDialog1.FileName)) Then
    Begin
       Resp := Application.MessageBox('Archivo Existe'+sLineBreak+'¿Desea Sobreescribirlo?', '', (MB_ICONQUESTION + MB_OKCANCEL));
       If (Resp<>IDOK) Then Exit;
    end;
    If (Resp=IDOK) Then
    Begin
       ffile:=TfdeFile.create(Utils.clearFilePath(SaveDialog1.FileName));
       ffile.SaveFromStringGrid(StringGrid2);
       ffile.Free;
       Modificado.Checked:=False;
       Edit3.SetFocus;
       Edit4.Text:=Utils.clearFilePath(SaveDialog1.FileName);
       ShowMessage('Archivo Grabado');
    end;
  end;
end;

procedure TForm1.BitBtn15Click(Sender: TObject);
var MG:TMyGridString;
begin
  MG:=TMyGridString.Create;
  MG.downInGrid(StringGrid3,ModWebXml);
  MG.Free;
end;

procedure TForm1.BitBtn16Click(Sender: TObject);
begin
//  stringgrid3.SaveOptions := [soDesign,soPosition,soAttributes,soContent];
  stringgrid3.SaveOptions := [soContent];
  StringGrid3.SaveToFile('webxml.plt');
  ModWebXml.Checked:=False;
end;

procedure TForm1.BitBtn19Click(Sender: TObject);
begin
   SelectDirectoryDialog1.InitialDir:=Edit5.Text;
   If  SelectDirectoryDialog1.Execute Then
   begin
    IF Edit5.Text<>SelectDirectoryDialog1.FileName then
       Edit5.Text:=SelectDirectoryDialog1.FileName;
   end;
end;

procedure TForm1.BitBtn2Click(Sender: TObject);
var MG:TMyGridString;
  Resp:Integer;
begin
    If Modificado.Checked Then
    begin
      Resp := Application.MessageBox('Esta Acción DESCARTARÁ los Cambios'+sLineBreak+'¿Desea Continuar?', '', (MB_ICONQUESTION + MB_OKCANCEL));
      If (Resp<>IDOK) Then Exit;
    end;
    MG:=TMyGridString.Create;
    MG.cleanGrid(StringGrid2);
    Mg.Free;
    Modificado.Checked:=False;
    Edit3.Text:='';
    Edit4.Text:='';
end;

procedure TForm1.BitBtn3Click(Sender: TObject);
begin
     Utils.InvertStringGrid(StringGrid1);
end;

procedure TForm1.BitBtn4Click(Sender: TObject);
var Mensaje:String;
  utilGrid:TMyGridString;
begin
  Mensaje:='';
  If (Trim(Mensaje).IsEmpty) and (Trim(ListBox1.GetSelectedText).IsEmpty) Then
     Mensaje:='Debe seleccionar ['+Label5.Caption+']';
  If (Trim(Mensaje).IsEmpty) and (Trim(Edit3.Text).IsEmpty) then
     Mensaje:='['+Label4.Caption+'] No puede estar vacío';
  If Trim(Mensaje).IsEmpty then
  begin
     Modificado.Checked:=True;
     utilGrid:=TMyGridString.Create;
     utilGrid.addToGrid(StringGrid2,ListBox1.GetSelectedText,edit3.Text);
     utilGrid.Free;
  end
  else
     ShowMessage(Mensaje);
end;

procedure TForm1.BitBtn5Click(Sender: TObject);
var UG:TMyGridString;
begin
  Modificado.Checked:=True;
  UG:=TMyGridString.Create;
  UG.delToGrid(StringGrid2,StringGrid2.Row);
  UG.Free;
end;

procedure TForm1.BitBtn6Click(Sender: TObject);
var ffile:TFdeFile;
  Resp:Integer;
begin
  If FileExists(Edit4.Text) Then begin
    //====================================== MenuItem4Click(Sender)
    ffile:=TfdeFile.create(Utils.clearFilePath(Edit4.Text));
    ffile.SaveFromStringGrid(StringGrid2);
    ffile.Free;
    Modificado.Checked:=False;
    Edit3.SetFocus;
    ShowMessage('Archivo Grabado')
    //======================================
  end else begin
    //====================================== MenuItem5Click(Sender);
    if SaveDialog1.Execute then
    begin
      Resp:=IDOK;
      If FileExists(Utils.clearFilePath(SaveDialog1.FileName)) Then
      Begin
         Resp := Application.MessageBox('Archivo Existe'+sLineBreak+'¿Desea Sobreescribirlo?', '', (MB_ICONQUESTION + MB_OKCANCEL));
         If (Resp<>IDOK) Then Exit;
      end;
      If (Resp=IDOK) Then
      Begin
         ffile:=TfdeFile.create(Utils.clearFilePath(SaveDialog1.FileName));
         ffile.SaveFromStringGrid(StringGrid2);
         ffile.Free;
         Modificado.Checked:=False;
         Edit3.SetFocus;
         Edit4.Text:=Utils.clearFilePath(SaveDialog1.FileName);
         ShowMessage('Archivo Grabado');
      end;
    end;
    //=======================================
  end;
end;

procedure TForm1.BitBtn7Click(Sender: TObject);
var MG:TMyGridString;
begin
  MG:=TMyGridString.Create;
  MG.upInGrid(StringGrid2,Modificado);
  MG.Free;
end;

procedure TForm1.BitBtn8Click(Sender: TObject);
var MG:TMyGridString;
begin
  MG:=TMyGridString.Create;
  MG.downInGrid(StringGrid2,Modificado);
  MG.Free;
end;

procedure TForm1.BitBtn9Click(Sender: TObject);
var
  rutajar,MensajeError:String;
begin
  If (varGlobales.getClrMemo()) Then RichMemo1.Clear;
  varGlobales.setWebappsDir(Edit1.Text);
  TrayIcon1.BalloonHint:=TrayIcon1.Hint;
  rutajar:=Utils.clearDirPath(varGlobales.getJavaHome())+'bin\jar.exe';
  If Not FileExists(rutajar) then
  begin
   Utils.addToRichMemo('No está correctamente definida la Ruta JDK, vaya a OPCIONES y en "Rutas" defina un JAVA_HOME válido.',RichMemo1,StatusBar1,clRed);
   exit;
  end;
  If (Not DirectoryExists(Utils.clearDirPath(Edit1.Text))) then
      MensajeError:=Label1.Caption+' No Valido.';

  If (Trim(MensajeError).IsEmpty) Then
     Begin
      If MinGenWar.Checked Then MinimizeToTray();
      Utils.GenWar(StringGrid1,varGlobales.getJavaHome(),RichMemo1,TrayIcon1,StatusBar1)
     end
  else
  begin
     ShowMessage(MensajeError);
     TrayIcon1.BalloonHint:=MensajeError;
  end;
  If (Form1.WindowState = wsMinimized)Or (Form1.ShowInTaskBar = stNever)  Then TrayIcon1.ShowBalloonHint;
end;

procedure TForm1.BtnApp10Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP10';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp10,ImgApp10);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),PChar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp10MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  if Button = mbRight then
  Begin
   POPAPP:='APP10';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.BtnApp11Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP11';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp11,ImgApp11);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),Pchar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp11MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  if Button = mbRight then
  Begin
   POPAPP:='APP11';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.BtnApp12Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP12';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp12,ImgApp12);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),Pchar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp12MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  if Button = mbRight then
  Begin
   POPAPP:='APP12';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.BtnApp13Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP13';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp13,ImgApp13);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),Pchar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp13MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  if Button = mbRight then
  Begin
   POPAPP:='APP13';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.BtnApp14Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP14';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp14,ImgApp14);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),Pchar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp14MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  if Button = mbRight then
  Begin
   POPAPP:='APP14';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.BtnApp15Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP15';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp15,ImgApp15);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),Pchar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp15MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  if Button = mbRight then
  Begin
   POPAPP:='APP15';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.BtnApp16Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP16';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp16,ImgApp16);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),Pchar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp16MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  if Button = mbRight then
  Begin
   POPAPP:='APP16';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.BtnApp17Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP17';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp17,ImgApp17);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),Pchar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp17MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  if Button = mbRight then
  Begin
   POPAPP:='APP17';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.BtnApp18Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP18';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp18,ImgApp18);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),Pchar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp18MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  if Button = mbRight then
  Begin
   POPAPP:='APP18';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.BtnApp19Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP19';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp19,ImgApp19);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),Pchar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp19MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  if Button = mbRight then
  Begin
   POPAPP:='APP19';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.BtnApp1Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP1';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp1,ImgApp1);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),Pchar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp1MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  if Button = mbRight then
  Begin
   POPAPP:='APP1';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.BtnApp20Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP20';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp20,ImgApp20);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),Pchar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp20MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  if Button = mbRight then
  Begin
   POPAPP:='APP20';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.BtnApp2Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP2';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp2,ImgApp2);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),PChar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp2MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
    if Button = mbRight then
  Begin
   POPAPP:='APP2';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.BtnApp3Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP3';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp3,ImgApp3);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),PChar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp3MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
    if Button = mbRight then
  Begin
   POPAPP:='APP3';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.BtnApp4Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP4';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp4,ImgApp4);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),PChar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp4MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
    if Button = mbRight then
  Begin
   POPAPP:='APP4';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.BtnApp5Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP5';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp5,ImgApp5);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),PChar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp5MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
    if Button = mbRight then
  Begin
   POPAPP:='APP5';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.BtnApp6Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP6';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp6,ImgApp6);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),PChar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp6MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
    if Button = mbRight then
  Begin
   POPAPP:='APP6';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.BtnApp7Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP7';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp7,ImgApp7);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),PChar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp7MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
    if Button = mbRight then
  Begin
   POPAPP:='APP7';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.BtnApp8Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP8';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp8,ImgApp8);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),PChar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp8MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
    if Button = mbRight then
  Begin
   POPAPP:='APP8';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.BtnApp9Click(Sender: TObject);
var FileName,param:String;
begin
    POPAPP:='APP9';
    FileName:=varGlobales.getApp(POPAPP);
    IF Not(FileExists(FileName)) then
     Begin
     If OpenDialog2.Execute Then
        Begin
        varGlobales.setApp(POPAPP,OpenDialog2.FileName);
        varGlobales.setAPPNombre(POPAPP,ExtractFileNameOnly(OpenDialog2.FileName));
        MyApp.addApp(POPAPP,BtnApp9,ImgApp9);
        end;
     end
    else
    Begin
      varGlobales.setAPPuso(POPAPP,(varGlobales.getAppUso(POPAPP)+1));
      param:=varGlobales.getAPPPar(POPAPP);
      ShellExecute(0,nil, PChar(FileName),PChar(param),PChar(extractfilepath(FileName)),1);
      If MinAppRun.Checked Then MinimizeToTray();
    end;
    RefreshAPPS();
end;

procedure TForm1.BtnApp9MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
    if Button = mbRight then
  Begin
   POPAPP:='APP9';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.Button2Click(Sender: TObject);
begin
  SelectDirectoryDialog1.InitialDir:=Edit1.Text;
  If  SelectDirectoryDialog1.Execute Then
  begin
   IF Edit1.Text<>SelectDirectoryDialog1.FileName then
      Edit1.Text:=SelectDirectoryDialog1.FileName;
  end;
end;

procedure Tform1.Refrescar();
begin
  Utils.FilDirGrid(Utils.clearDirPath(varGlobales.getWebappsDir()),
  ListFilterEdit1.Text,StringGrid1);
  StringGrid1.AutoSizeColumn(1);
  StringGrid1.AutoSizeColumn(3);
end;

{procedure TForm1.CheckBox1Change(Sender: TObject);
Begin
  varGlobales.setSoloDir(chkWebxml.Checked);
  Refrescar();
end;}

procedure TForm1.CheckBox2Change(Sender: TObject);
begin
  varGlobales.setMostrarOK(CheckBox2.Checked);
end;

procedure TForm1.CheckBox3Change(Sender: TObject);
begin
  varGlobales.setMostrarERR(CheckBox3.Checked);
end;

procedure TForm1.CheckBox4Change(Sender: TObject);
begin
  varGlobales.setMostrarMSJ(CheckBox4.Checked);
end;

procedure TForm1.CheckBox5Change(Sender: TObject);
begin
  varGlobales.setBeep(CheckBox5.Checked);
end;

procedure TForm1.CheckBox6Change(Sender: TObject);
begin
  varGlobales.setOrderByUso(CheckBox6.Checked);
  RefreshAPPS();
end;

procedure TForm1.CheckBox7Change(Sender: TObject);
begin
  varGlobales.setConfirmDel(CheckBox7.Checked);
end;

procedure TForm1.CheckBox8Change(Sender: TObject);
begin
  varGlobales.setOpcSalir(CheckBox8.Checked);
end;

procedure TForm1.CheckBox9Change(Sender: TObject);
begin
  varGlobales.setClrMemo(CheckBox9.Checked);
end;

procedure TForm1.chkWebxmlChange(Sender: TObject);
begin
  varGlobales.setcompWebXml(chkWebxml.Checked);
end;

procedure TForm1.Edit5Change(Sender: TObject);
begin
 varGlobales.setJavaHome(Edit5.Text);
end;

procedure TForm1.EditWebxmlBeforeShow(ASender: TObject; ANewPage: TPage;
  ANewIndex: Integer);
begin
  StatusBar1.SimpleText:='';
  Form1.Caption:=LblProductName.Caption+': [EDITAR WEB.XML]';
  varGlobales.setPageIndex(Notebook1.PageIndex);
end;

procedure TForm1.EditWebxmlExit(Sender: TObject);
begin
  if ModWebXml.Checked then
  begin
   ShowMessage('No guardó los cambios');
//   CloseAction:=caNone;
   Utils.goNotebookPage(EditWebxml,Notebook1);
  end;

end;

procedure TForm1.ImgApp10MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  if Button = mbRight then
  Begin
   POPAPP:='APP10';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.ImgApp1MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  if Button = mbRight then
  Begin
   POPAPP:='APP1';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.ImgApp2MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  if Button = mbRight then
  Begin
   POPAPP:='APP2';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.ImgApp3MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
   if Button = mbRight then
  Begin
   POPAPP:='APP3';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.ImgApp4MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
   if Button = mbRight then
  Begin
   POPAPP:='APP4';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.ImgApp5MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
   if Button = mbRight then
  Begin
   POPAPP:='APP5';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.ImgApp6MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
   if Button = mbRight then
  Begin
   POPAPP:='APP6';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.ImgApp7MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
   if Button = mbRight then
  Begin
   POPAPP:='APP7';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.ImgApp8MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
   if Button = mbRight then
  Begin
   POPAPP:='APP8';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.ImgApp9MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
   if Button = mbRight then
  Begin
   POPAPP:='APP9';
   PopupMenu3.PopUp;
  end;
end;

procedure TForm1.ItemClientcfgClick(Sender: TObject);
var dir:String;
begin
  dir:=Utils.clearDirPath(StringGrid1.Rows[StringGrid1.Row][2])+'WEB-INF\classes\client.cfg';
  if ShellExecute(0,nil, PChar(dir),PChar(dir),nil,1)=0 then;
end;

procedure TForm1.ItemPDFReportiniClick(Sender: TObject);
var dir:String;
begin
  dir:=Utils.clearDirPath(StringGrid1.Rows[StringGrid1.Row][2])+'WEB-INF\PDFReport.ini';
  if ShellExecute(0,nil, PChar(dir),PChar(dir),nil,1)=0 then;
end;



procedure TForm1.ItemCopiarRutaClick(Sender: TObject);
var path, filename:String;
begin
  path:= Utils.clearDirPath(StringGrid1.Rows[StringGrid1.Row][2]);
  filename:=StringGrid1.Rows[StringGrid1.Row][3];
  If StringGrid1.Col = 3 then Utils.ClipboardCopy(path+filename)
  else Utils.ClipboardCopy( StringGrid1.Rows[StringGrid1.Row][2]);
end;

procedure TForm1.Label10Click(Sender: TObject);
begin
  Utils.goNotebookPage(EditWebxml,Notebook1);
end;

procedure TForm1.MenuItem10Click(Sender: TObject);
begin
  Utils.goNotebookPage(About,Notebook1);
end;

procedure TForm1.MenuItem11Click(Sender: TObject);
begin
  Utils.goNotebookPage(Principal,Notebook1);
end;

procedure TForm1.MenuItem13Click(Sender: TObject);
begin
  varGlobales.delAPP(POPAPP);
  RefreshAPPS();
end;

procedure TForm1.MenuItem14Click(Sender: TObject);
begin
  Utils.goNotebookPage(RunFDE,Notebook1);
end;

procedure TForm1.MenuItem1Click(Sender: TObject);
begin

end;

procedure TForm1.MenuItem20Click(Sender: TObject);
begin
  BitBtn5Click(Sender);
end;

procedure TForm1.MenuItem21Click(Sender: TObject);
begin
  StringGrid2.AutoSizeColumn(2);
end;

procedure TForm1.ItemAjustarClick(Sender: TObject);
begin
  StringGrid1.AutoSizeColumn(1);
end;

procedure TForm1.MenuItem23Click(Sender: TObject);
var NombreAnterior,FileName,NombreNuevo:String;
begin
  FileName:=varGlobales.getApp(POPAPP);
  If Trim(Filename).IsEmpty Then Exit;
  NombreAnterior:=varGlobales.getAPPNombre(POPAPP);
  If Trim(NombreAnterior).IsEmpty then NombreAnterior:=ExtractFileNameOnly(FileName);
  NombreNuevo := InputBox (Form1.Caption,'Ingresa un Nombre para la APP',
            NombreAnterior);
  If Trim(NombreNuevo).IsEmpty then
     Begin
       NombreNuevo:=ExtractFileNameOnly(FileName);
       varGlobales.getApp(POPAPP);
       varGlobales.setAPPNombre(POPAPP,NombreNuevo)
     end
    else
        varGlobales.setAPPNombre(POPAPP,NombreNuevo);
  RefreshAPPS();
end;

procedure TForm1.MenuTrayCloseClick(Sender: TObject);
begin
  Self.Close;
end;

procedure TForm1.ItemWebXmlClick(Sender: TObject);
var dir:String;
begin
  dir:=Utils.clearDirPath(StringGrid1.Rows[StringGrid1.Row][2])+'WEB-INF\web.xml';
  if ShellExecute(0,nil, PChar(dir),PChar(dir),nil,1)=0 then;
end;

procedure TForm1.MenuItem2Click(Sender: TObject);
begin
  Utils.goNotebookPage(EditFDE,Notebook1);
end;

procedure TForm1.MenuItem3Click(Sender: TObject);
begin
  Utils.goNotebookPage(Opciones,Notebook1);
end;

procedure TForm1.MenuItem4Click(Sender: TObject);
begin
  Utils.MostrarCarpeta(ExtractFilePath(Application.ExeName));
end;

procedure TForm1.MenuItem5Click(Sender: TObject);
begin
  RefreshAPPS();
end;



procedure TForm1.MenuItem6Click(Sender: TObject);
begin
  Utils.goNotebookPage(EditWebxml,Notebook1);
end;

 //PDFReport.ini
procedure TForm1.MenuItem7Click(Sender: TObject);
  var NombreAnterior,FileName,NombreNuevo:String;
begin
  FileName:=varGlobales.getApp(POPAPP);
  If Trim(Filename).IsEmpty Then Exit;
  NombreAnterior:=varGlobales.getAPPPar(POPAPP);
  NombreNuevo := InputBox (Form1.Caption,'Ingresa PARAMETROS para la APP', NombreAnterior);
  varGlobales.setAPPPar(POPAPP,NombreNuevo);
  RefreshAPPS();
end;

procedure TForm1.MenuItem8Click(Sender: TObject);
begin
  If OpenDialog2.Execute Then
  Begin
    varGlobales.setImgApp(POPAPP,OpenDialog2.FileName);
    RefreshAPPS();
  end;
end;

procedure TForm1.MinAppRunChange(Sender: TObject);
begin
  varGlobales.setTrayRunAPP(MinAppRun.Checked);
end;

procedure TForm1.MinGenWarChange(Sender: TObject);
begin
    varGlobales.setTrayGenWar(MinGenWar.Checked);
end;

procedure TForm1.MinScriptFDEChange(Sender: TObject);
begin
  varGlobales.setTrayScriptFDE(MinScriptFDE.Checked);
end;

procedure TForm1.FormWindowStateChange(Sender: TObject);
begin
  if ToTray.Checked then
  begin
   If (Form1.WindowState = wsMinimized) then
     MinimizeToTray()
   end;
end;

procedure TForm1.ItemCheck_UncheckClick(Sender: TObject);
begin
  If StringGrid1.Rows[StringGrid1.Row][0] = '1' Then
     StringGrid1.Cells[0,StringGrid1.Row]:='0'
  else
      StringGrid1.Cells[0,StringGrid1.Row]:='1';
end;

procedure TForm1.ItemVerWinClick(Sender: TObject);
begin
  Utils.MostrarCarpeta(StringGrid1.Rows[StringGrid1.Row][2]);
end;

procedure TForm1.ModWebXmlChange(Sender: TObject);
begin
   BitBtn16.Enabled:=ModWebXml.Checked;
end;

procedure TForm1.StringGrid1MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
var
row, col: LongInt;
begin
  stringgrid1.MouseToCell( X,Y, col, row );
  stringgrid1.Row := row;
  StringGrid1.Col := col;
  if button = mbRight then popupmenu1.Popup;
end;

procedure TForm1.StringGrid2MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
var row, col: LongInt;
begin
  stringgrid2.MouseToCell( X,Y, col, row );
  stringgrid2.Row := row;
  if button = mbRight then popupmenu2.Popup;
end;

procedure TForm1.StringGrid3SelectEditor(Sender: TObject; aCol, aRow: Integer;
  var Editor: TWinControl);
begin
  if (Editor is TCustomComboBox) then
    with Editor as TCustomComboBox do begin
      if  aCol=3 then Style := csDropDownList Else Style:=csDropDown;
  end;
end;

procedure TForm1.StringGrid3ValidateEntry(sender: TObject; aCol, aRow: Integer;
  const OldValue: string; var NewValue: String);
begin
 If OldValue<>NewValue then ModWebXml.Checked:=True;
end;

Procedure TForm1.MinimizeToTray();
begin
     TrayIcon1.Show;
     Form1.WindowState:=wsMinimized;
     Form1.ShowInTaskBar := stNever;
     Form1.Hide;
end;

Procedure TForm1.RestoreFromTray();
begin
 //    TrayIcon1.Hide;
     Form1.WindowState:=wsNormal;
     Form1.ShowInTaskBar := stDefault;
     Form1.Show;
end;
procedure TForm1.ToTrayChange(Sender: TObject);
begin
  varGlobales.setTrayMinimize(ToTray.Checked);
end;

procedure TForm1.Edit1Change(Sender: TObject);
begin
   Utils.DelAllRowsGrid(StringGrid1);
   If DirectoryExists(Utils.clearDirPath(Edit1.Text)) then
   begin
       varGlobales.setWebappsDir(Edit1.Text);
   end;
   {Check}
   Refrescar();
end;

procedure TForm1.Edit2Change(Sender: TObject);
begin
  Label6.Visible:=FileExists(Edit2.Text);
end;

procedure TForm1.Edit4Change(Sender: TObject);
var GS:TMyGridString;
begin
  If FileExists(Utils.clearFilePath(Edit4.Text)) then
  begin
   Label11.Visible:=True;
   Modificado.Checked:=False;
   GS:=TMyGridString.Create;
   GS.LoadGridFromFDEFile(StringGrid2,Utils.clearFilePath(Edit4.Text));
   GS.Free;
  end
  else
   Label11.Visible:=False;
end;

procedure TForm1.Label11Click(Sender: TObject);
begin
  Utils.goNotebookPage(RunFDE,Notebook1);
  Edit2.Text:=Edit4.Text;
end;

procedure TForm1.Label1Click(Sender: TObject);
begin
  Utils.MostrarCarpeta(Edit1.Text);
end;

procedure TForm1.Label6Click(Sender: TObject);
begin
  Utils.goNotebookPage(EditFDE,Notebook1);
  Edit4.Text:=Edit2.Text;
end;

procedure TForm1.ListBox1Click(Sender: TObject);
var hlp:TAyuda;
begin
  hlp:=TAyuda.create();
  RichMemo2.Clear;
  hlp.addToRichMemo(Trim(ListBox1.GetSelectedText),RichMemo2,StatusBar1);
  hlp.Free;
  //ShowMessage(Trim(ListBox1.GetSelectedText));
end;

procedure TForm1.ListFilterEdit1Change(Sender: TObject);
begin
  Utils.FilDirGrid(Utils.clearDirPath(varGlobales.getWebappsDir()),
                       ListFilterEdit1.Text,StringGrid1);
  StringGrid1.AutoSizeColumn(1);
end;

procedure TForm1.menuBtnClick(Sender: TObject);
begin
  PopupMenu1.PopUp;
end;

procedure TForm1.ItemSelAllClick(Sender: TObject);
begin
  Utils.SelAllStringGrid(StringGrid1);
end;




procedure TForm1.ItemSelNoneClick(Sender: TObject);
begin
    Utils.SelNoneStringGrid(StringGrid1);
end;

procedure TForm1.ItemSelInvertirClick(Sender: TObject);
begin
  Utils.InvertStringGrid(StringGrid1);
end;

procedure TForm1.MenuItem16Click(Sender: TObject);
begin
  MinimizeToTray();
end;

procedure TForm1.MenuItem17Click(Sender: TObject);
begin
  Self.Close;
end;

procedure TForm1.MenuItem9Click(Sender: TObject);
begin
  varGlobales.delAPP(POPAPP+'IMG');
  RefreshAPPS();
end;
procedure TForm1.RefreshAPPS();
begin

  MYApp.LoadApps(@MenuItem11Click,MenuItem5,@MenuItem17Click,TrayPopMenu,BtnApp1,ImgApp1,BtnApp2,ImgApp2,BtnApp3,ImgApp3,BtnApp4,ImgApp4,BtnApp5,ImgApp5,BtnApp6,ImgApp6,BtnApp7,ImgApp7,BtnApp8,ImgApp8,BtnApp9,ImgApp9,BtnApp10,ImgApp10,
                 BtnApp11,ImgApp11,BtnApp12,ImgApp12,BtnApp13,ImgApp13,BtnApp14,ImgApp14,BtnApp15,ImgApp15,BtnApp16,ImgApp16,BtnApp17,ImgApp17,BtnApp18,ImgApp18,BtnApp19,ImgApp19,BtnApp20,ImgApp20);
end;

procedure TForm1.ModificadoChange(Sender: TObject);
begin
  BitBtn6.Enabled:= modificado.Checked;
  //MenuItem4.Enabled:=FileExists(Utils.clearFilePath(Edit4.Text)) and modificado.Checked;
end;

procedure TForm1.RunFDEBeforeShow(ASender: TObject; ANewPage: TPage;
  ANewIndex: Integer);
begin
  StatusBar1.SimpleText:='';
  Form1.Caption:=LblProductName.Caption+': [RUN SCRIPT]';
  varGlobales.setPageIndex(Notebook1.PageIndex);

end;

procedure TForm1.EditFDEBeforeShow(ASender: TObject; ANewPage: TPage;
  ANewIndex: Integer);
var hlp:TAyuda;
begin
  StatusBar1.SimpleText:='';
  Form1.Caption:=LblProductName.Caption+': [EDITOR .FDE]';

  varGlobales.setPageIndex(Notebook1.PageIndex);
  hlp:=TAyuda.create();
  RichMemo2.Clear;
  hlp.addToRichMemo(Trim(ListBox1.GetSelectedText),RichMemo2,StatusBar1);
  hlp.Free;

end;

procedure TForm1.AboutBeforeShow(ASender: TObject; ANewPage: TPage;
  ANewIndex: Integer);
begin
  StatusBar1.SimpleText:='';
  Form1.Caption:=LblProductName.Caption+': [ACERCA DE...]';
end;

procedure TForm1.OpcionesBeforeShow(ASender: TObject; ANewPage: TPage;
  ANewIndex: Integer);
begin
  StatusBar1.SimpleText:='';
  Form1.Caption:=LblProductName.Caption+': [OPCIONES]';
  varGlobales.setPageIndex(Notebook1.PageIndex);
end;


procedure TForm1.PrincipalBeforeShow(ASender: TObject; ANewPage: TPage;
  ANewIndex: Integer);
begin
  StatusBar1.SimpleText:='';
  Form1.Caption:=LblProductName.Caption+': [PRINCIPAL]';
  varGlobales.setPageIndex(Notebook1.PageIndex);
end;

procedure TForm1.RichMemo1Change(Sender: TObject);
begin

end;

procedure TForm1.AboutExit(Sender: TObject);
begin
   Timer1.Enabled:=False;
   Label7.Caption :='';
end;

procedure TForm1.StringGrid1DblClick(Sender: TObject);
begin
 Utils.MostrarCarpeta(StringGrid1.Rows[StringGrid1.Row][2]);
end;

procedure TForm1.StringGrid2ButtonClick(Sender: TObject; aCol, aRow: Integer);
begin
  showMessage(StringGrid2.Cells[aCol,aRow]);
end;

procedure TForm1.StringGrid2EditingDone(Sender: TObject);
begin
  modificado.Checked:=True;
end;

procedure TForm1.Timer1Timer(Sender: TObject);
var
  txt:String;
begin
  txt:=Label7.Caption;
  Label7.Caption:= Copy(txt, 2, length(txt)-1) + Copy(txt,1,1)
end;

procedure TForm1.TrayIcon1Click(Sender: TObject);
begin
 RestoreFromTray();
end;

procedure TForm1.UniqueInstance1OtherInstance(Sender: TObject;
  ParamCount: Integer; const Parameters: array of String);
begin
      TrayIcon1.Hide;
      Form1.WindowState:=wsNormal;
      Form1.ShowInTaskBar := stDefault;
      Form1.Show;
 //  ShowMessage('Ya existe una instancia de FDE web Utils ejecutándose.');
end;

procedure TForm1.Button5Click(Sender: TObject);
begin
  Utils.MostrarCarpeta(Edit2.Text);
end;

procedure TForm1.Iniciar();
var MensajeError:String;
begin
    If (not FileExists(Edit2.Text)) then
        MensajeError:='No se encuentra archivo .fde';
    If (Not DirectoryExists(Utils.clearDirPath(Edit1.Text))) then
       MensajeError:=Label1.Caption+' No Valido.';
    If (Not FileExists(Utils.clearFilePath(Edit2.Text))) then
       MensajeError:=Label2.Caption+' No Valido';
    If ((Trim(Edit1.Text).IsEmpty) or (Trim(Edit2.Text).IsEmpty)) then
        MensajeError:='Existen Campos sin Completar.';
    If (Trim(MensajeError).IsEmpty) Then
       Procesar()
    else
       ShowMessage(MensajeError);
end;

procedure TForm1.Procesar();
var fdefile:Tfdefile;
begin
  //Margen RichMemo  uses windows
  //SendMessage(RichMemo1.Handle, EM_SETMARGINS, EC_LEFTMARGIN or EC_RIGHTMARGIN, MakeLong(10,10));
  //INICIO
  varGlobales.setWebappsDir(Edit1.Text);
  varGlobales.setFdeFilePath(Edit2.Text);
  fdefile:=TFdeFile.create(Edit2.Text);
  If MinScriptFDE.Checked Then MinimizeToTray();
  FdeFile.Procesar(StringGrid1,StringGrid3,RichMemo1,TrayIcon1,StatusBar1);
end;
end.

